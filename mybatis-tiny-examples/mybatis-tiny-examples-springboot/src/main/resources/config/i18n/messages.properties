message.request.failed=\u8BF7\u6C42\u5931\u8D25!(\u9519\u8BEF\u4FE1\u606F:{0})
message.parameter.required=\u53C2\u6570{0}\u4E0D\u80FD\u4E3A\u7A7A!
message.httpstatus.400=\u8BF7\u6C42\u53C2\u6570\u9519\u8BEF
message.httpstatus.401=\u8BF7\u6C42\u672A\u6388\u6743
message.httpstatus.403=\u8BF7\u6C42\u88AB\u62D2\u7EDD
message.httpstatus.405=\u8BF7\u6C42\u65B9\u6CD5\u4E0D\u652F\u6301
message.httpstatus.415=\u8BF7\u6C42\u5185\u5BB9\u7C7B\u578B\u4E0D\u652F\u6301

message.httpstatus.500=\u670D\u52A1\u5668\u5185\u90E8\u9519\u8BEF: {0}
message.httpstatus.503=\u670D\u52A1\u4E0D\u53EF\u7528

#Spring-Security
AbstractUserDetailsAuthenticationProvider.badCredentials=\u7528\u6237\u540D\u6216\u5BC6\u7801\u4E0D\u5339\u914D!
AbstractUserDetailsAuthenticationProvider.locked=\u60A8\u7684\u8D26\u6237\u5DF2\u7ECF\u88AB\u9501\u5B9A!
AbstractUserDetailsAuthenticationProvider.disabled=\u60A8\u7684\u8D26\u6237\u5DF2\u5931\u6548!
AbstractUserDetailsAuthenticationProvider.expired=\u60A8\u7684\u8D26\u6237\u5DF2\u8FC7\u671F!
AbstractUserDetailsAuthenticationProvider.credentialsExpired=\u60A8\u7684\u767B\u5F55\u51ED\u8BC1\u5DF2\u8FC7\u671F!
spring.security.oauth2.error.unauthorized=\u8BF7\u6C42\u672A\u6388\u6743
spring.security.oauth2.error.invalid_token=\u8BF7\u6C42\u672A\u6388\u6743
spring.security.oauth2.error.access_denied=\u8BF7\u6C42\u88AB\u62D2\u7EDD
spring.security.oauth2.error.method_not_allowed=\u8BF7\u6C42\u65B9\u6CD5\u672A\u5141\u8BB8
spring.security.oauth2.error.server_error=\u670D\u52A1\u5668\u5185\u5B58\u9519\u8BEF: {0}