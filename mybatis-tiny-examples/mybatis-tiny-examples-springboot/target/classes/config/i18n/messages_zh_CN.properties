message.request.failed=\u8bf7\u6c42\u5931\u8d25!(\u9519\u8bef\u4fe1\u606f:{0})
message.parameter.required=\u53c2\u6570{0}\u4e0d\u80fd\u4e3a\u7a7a!
message.httpstatus.400=\u8bf7\u6c42\u53c2\u6570\u9519\u8bef
message.httpstatus.401=\u8bf7\u6c42\u672a\u6388\u6743
message.httpstatus.403=\u8bf7\u6c42\u88ab\u62d2\u7edd
message.httpstatus.405=\u8bf7\u6c42\u65b9\u6cd5\u4e0d\u652f\u6301
message.httpstatus.415=\u8bf7\u6c42\u5185\u5bb9\u7c7b\u578b\u4e0d\u652f\u6301

message.httpstatus.500=\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef: {0}
message.httpstatus.503=\u670d\u52a1\u4e0d\u53ef\u7528

#Spring-Security
AbstractUserDetailsAuthenticationProvider.badCredentials=\u7528\u6237\u540d\u6216\u5bc6\u7801\u4e0d\u5339\u914d!
AbstractUserDetailsAuthenticationProvider.locked=\u60a8\u7684\u8d26\u6237\u5df2\u7ecf\u88ab\u9501\u5b9a!
AbstractUserDetailsAuthenticationProvider.disabled=\u60a8\u7684\u8d26\u6237\u5df2\u5931\u6548!
AbstractUserDetailsAuthenticationProvider.expired=\u60a8\u7684\u8d26\u6237\u5df2\u8fc7\u671f!
AbstractUserDetailsAuthenticationProvider.credentialsExpired=\u60a8\u7684\u767b\u5f55\u51ed\u8bc1\u5df2\u8fc7\u671f!
spring.security.oauth2.error.unauthorized=\u8bf7\u6c42\u672a\u6388\u6743
spring.security.oauth2.error.invalid_token=\u8bf7\u6c42\u672a\u6388\u6743
spring.security.oauth2.error.access_denied=\u8bf7\u6c42\u88ab\u62d2\u7edd
spring.security.oauth2.error.method_not_allowed=\u8bf7\u6c42\u65b9\u6cd5\u672a\u5141\u8bb8
spring.security.oauth2.error.server_error=\u670d\u52a1\u5668\u5185\u5b58\u9519\u8bef: {0}